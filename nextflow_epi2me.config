//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.
// process.container = 'file:///rds/projects/b/broderra-mrc-alt-telomere/Anu/containers/wf-teloseq_latest.sif'
// apptainer.libraryDir = '/rds/projects/b/broderra-mrc-alt-telomere/Anu/containers/'
apptainer.enabled = true

// apptainer {
//     cacheDir = '/rds/projects/b/broderra-mrc-alt-telomere/Anu/wf-teloseq/work/singularity'
// }

params {
    help = false
    version = false
    fastq = null
    bam = null
    read_quality = 9
    out_dir = "output"
    min_length = 100
    sample = null

    sample_sheet = null
    aws_image_prefix = null
    aws_queue = null
    disable_ping = false
    analyse_unclassified = false
    monochrome_logs = false
    validate_params = true
    show_hidden_params = false
    store_dir = null

    // alignment
    skip_mapping = false
    reference = null
    alignment_threads = 6


    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf'

    wf {
        fastcat_stats = true
        bamstats = true
        keep_unaligned = false
        example_cmd = [
            "--bam 'wf-teloseq-demo/data'",
            "--reference 'wf-teloseq-demo/HG002qpMP_reference.fasta.gz'",
        ]
        common_sha = "sha1c69fd30053aad5d516e9567b3944384325a0fee"
        container_sha = "sha0948a78347c0e41c71e39687ca2dcb72780361ff"
        agent = null
        epi2me_instance = null
        epi2me_user = null
    }
}

manifest {
    name = 'epi2me-labs/wf-teloseq'
    author = 'Oxford Nanopore Technologies'
    homePage = 'https://github.com/epi2me-labs/wf-teloseq'
    description = "A workflow to analyse telomere-enriched data generated using Oxford Nanopore's Telo-Seq method."
    mainScript = 'main.nf'
    nextflowVersion = '>=23.04.2'
    version = '1.0.0'
}


// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    // NOTE This container has its own ezcharts - remember to update up it alongside common 
    withLabel: wf_teloseq {
        container = "ontresearch/wf-teloseq:${params.wf.container_sha}"
    }
    withLabel: wf_common {
        container = "ontresearch/wf-common:${params.wf.common_sha}"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}

env {
MPLCONFIGDIR = "${PWD}/matplotlib/.cache"
}

profiles {
    // the "standard" profile is used implicitly by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = false
            autoMounts = false
        }
    }

    // keep stub conda profile to prevent unknown profile warning so users get a better error
    conda {
        conda.enabled = true
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel: wf_common {
                container = "${params.aws_image_prefix}-wf-common:${params.wf.common_sha}"
            }
            withLabel: wf_teloseq {
                container = "${params.aws_image_prefix}-wf-teloseq:${params.wf.container_sha}"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }
    
    // using apptainer instead of docker
    apptainer {
        apptainer {
            enabled = true
            autoMounts = true
            runOptions = "-B ${HOME}"
        }   
    }
    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}


timeline {
    enabled = true
    overwrite = true
    file = "${params.out_dir}/execution/timeline.html"
}
report {
    enabled = true
    overwrite = true
    file = "${params.out_dir}/execution/report.html"
}
trace {
    enabled = true
    overwrite = true
    file = "${params.out_dir}/execution/trace.txt"
}

env {
    PYTHONNOUSERSITE = 1
    JAVA_TOOL_OPTIONS = "-Xlog:disable -Xlog:all=warning:stderr"
}
