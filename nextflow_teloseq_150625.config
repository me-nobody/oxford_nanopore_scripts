process.container = 'file:///rds/projects/b/broderra-mrc-alt-telomere/Anu/containers/wf-teloseq_latest.sif'
apptainer.libraryDir = '/rds/projects/b/broderra-mrc-alt-telomere/Anu/containers/'
apptainer.enabled = true

//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    help = false
    version = false
    fastq = null
    bam = null
    reference = "/rds/projects/b/broderra-mrc-alt-telomere/Anu/reference_genomes/human_pangenome_reference_v1.1.fasta"
    read_quality = 9
    out_dir = "/rds/projects/b/broderra-mrc-alt-telomere/Anu"
    enzyme_cut = "GATATC"
    sample = null
    mapq = 4
    mincoverage = -1
    cov_4cluster = 7
    sample_sheet = null
    denovoRef = null
    curatedContigs = null
    curation = false
    aws_image_prefix = null
    skipmapping = false
    doublestranded = false
    denovo = false
    aws_queue = null
    disable_ping = false
    analyse_unclassified = false
    watch_path = false
    client_fields = null
    fastq_chunk = null

    monochrome_logs = false
    validate_params = true
    show_hidden_params = false

    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf'

    wf {
        fastcat_stats = true
        bamstats = true
        keep_unaligned = false
        example_cmd = [
            "--fastq './test_data/HG002_small_test.fastq.gz'",
        ]

        common_sha = "sha8b5843d549bb210558cbb676fe537a153ce771d6"
        container_sha = "sha813f2eaa4f823cfd36a248799dd8bbb577485b61"
        agent = null
        epi2me_instance = null
        epi2me_user = null
    }
}

manifest{
    name            = 'epi2me-labs/wf-teloseq'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-teloseq'
    description     = "A workflow to analyse telomere-enriched data generated using Oxford Nanopore's Telo-Seq method."
    mainScript      = 'main.nf'
    nextflowVersion = '>=23.04.2'
    version         = '0.0.4'
}


// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    withLabel:wf_teloseq {
        container = "ontresearch/wf-teloseq:${params.wf.container_sha}"
    }
    withLabel:wf_common {
        container = "ontresearch/wf-common:${params.wf.common_sha}"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}


profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = false
            autoMounts = false
        }
    }
    // using apptainer instead of docker
    apptainer {
        apptainer {
            enabled = true
            autoMounts = true
            runOptions = "-B ${PWD}/matplotlib"
        }   
    }

    // keep stub conda profile to prevent unknown profile warning so users get a better error
    conda {
        conda.enabled = true
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:wf_common {
                container = "${params.aws_image_prefix}-wf-common:${params.wf.common_sha}"
            }
            withLabel:wf_teloseq {
                container = "${params.aws_image_prefix}-wf-teloseq:${params.wf.container_sha}"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
 }

// Clean up work directory after successful run
cleanup = true



timeline {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/trace.txt"
}

env {
    PYTHONNOUSERSITE = 1
    JAVA_TOOL_OPTIONS = "-Xlog:disable -Xlog:all=warning:stderr"
}

